{"version":3,"file":"static/js/91.1bf582fc.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: 20px;\n  border: 1px solid #111;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0px 1px 6px rgba(46, 47, 66, 0.08),\n    0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #111;\n  border-radius: 4px;\n  padding: 4px;\n  font-size: 16px;\n`;\n\nexport const Button = styled.button`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  align-items: center;\n  letter-spacing: 0.04em;\n  background-color: #1976d2;\n  color: #ffffff;\n  border: none;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  padding: 4px 8px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background-color: #111b87;\n  }\n`;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter.toLowerCase())\n  );\n};\n","import { useState } from 'react';\nimport { Form } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\nimport { TextField, Typography, Button } from '@mui/material';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const data = { name, number };\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (contacts.find(contact => data.name === contact.name)) {\n      alert(`${data.name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContacts({ name, number }));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h2\" sx={{ mb: 2 }}>\n        Phonebook\n      </Typography>\n      <Form onSubmit={handleSubmit}>\n        <TextField\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n\n        <TextField\n          label=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n\n        <Button variant=\"contained\" type=\"submit\">\n          Add contact\n        </Button>\n      </Form>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  button {\n    border: 1px solid #1976d2;\n    border-radius: 6px;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  align-items: center;\n  letter-spacing: 0.04em;\n  background-color: #1976d2;\n  color: #ffffff;\n  border: none;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  padding: 4px 8px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  margin-left: 20px;\n\n  &:hover,\n  &:focus {\n    background-color: #111b87;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item } from './ContactListItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport { Grid, Typography, IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactListItem = ({ option }) => {\n  const dispatch = useDispatch();\n  const onDeleteContact = () => dispatch(deleteContacts(option.id));\n\n  return (\n    <Grid item xs={12}>\n      <Item>\n        <Typography variant=\"body1\" component=\"span\">\n          {option.name}: {option.number}\n        </Typography>\n\n        <IconButton\n          type=\"button\"\n          onClick={onDeleteContact}\n          aria-label=\"delete\"\n          color=\"primary\"\n        >\n          <DeleteIcon />\n        </IconButton>\n      </Item>\n    </Grid>\n  );\n};\n\nContactListItem.propTypes = {\n  option: PropTypes.object.isRequired,\n};\n","import { TextField } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { addFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const onFilterChange = event => dispatch(addFilter(event.target.value));\n\n  return (\n    <TextField\n      label=\" Find contacts by name\"\n      sx={{ mb: 2 }}\n      fullWidth\n      type=\"text\"\n      onChange={onFilterChange}\n    />\n  );\n};\n","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { Filter } from 'components/Filter/Filter';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { Grid, Typography } from '@mui/material';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <div>\n      <Typography variant=\"h4\" component=\"h3\" sx={{ my: 2 }}>\n        Contacts\n      </Typography>\n      <Filter />\n      <Grid container rowSpacing={1} columnSpacing={1}>\n        {contacts.map(option => {\n          return <ContactListItem key={option.id} option={option} />;\n        })}\n      </Grid>\n    </div>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n      <ContactForm />\n      <ContactList />\n      {isLoading && !error && <b>Request in progress...</b>}\n    </div>\n  );\n}\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","filter","selectFilter","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","data","dispatch","useDispatch","useSelector","handleChange","event","target","value","reset","_jsxs","children","_jsx","Typography","variant","sx","mb","onSubmit","preventDefault","find","alert","concat","addContacts","TextField","label","type","pattern","title","required","onChange","Button","Item","ContactListItem","_ref","option","Grid","item","xs","component","IconButton","onClick","deleteContacts","id","color","DeleteIcon","Filter","fullWidth","addFilter","ContactList","my","container","rowSpacing","columnSpacing","map","Contacts","useEffect","fetchContacts"],"sourceRoot":""}